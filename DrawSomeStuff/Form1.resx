<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>152, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>